name: Keep Codespace Alive for 24*7 by @DARKESPYT

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  run-codespace:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y tmux python3 python3-pip
        pip3 install pexpect

    - name: Authenticate with GitHub CLI
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
      run: |
        echo $GH_TOKEN | gh auth login --with-token
        gh auth status  # Check if authentication was successful

    - name: Start Codespace if stopped
      env:
        CODESPACE: fuzzy-space-palm-tree-5gq5jvwqjxrrfj6j
      run: |
        echo "Checking if Codespace is running..."
        STATUS=$(gh codespace list --json name,status --jq '.[] | select(.name == "${{ env.CODESPACE }}") | .status')
        echo "Codespace status: $STATUS"
        
        if [ "$STATUS" == "STOPPED" ]; then
          echo "Starting Codespace..."
          gh codespace start --codespace $CODESPACE
        fi
        
        # Wait for Codespace to be ready
        echo "Waiting for Codespace to be ready..."
        while true; do
          STATUS=$(gh codespace list --json name,status --jq '.[] | select(.name == "${{ env.CODESPACE }}") | .status')
          if [ "$STATUS" == "RUNNING" ]; then
            echo "Codespace is running."
            break
          fi
          sleep 5  # Check every 5 seconds
        done

    - name: Connect to Codespace and Run Script
      env:
        CODESPACE: fuzzy-space-palm-tree-5gq5jvwqjxrrfj6j
        SCRIPT_PATH: /workspaces/src-forwarder/start.py
        SESSION_NAME: bot
      run: |
        python3 -c "
import pexpect
import sys

codespace = '${{ env.CODESPACE }}'
script_path = '${{ env.SCRIPT_PATH }}'
session_name = '${{ env.SESSION_NAME }}'

try:
    ssh_connection = pexpect.spawn(f'gh codespace ssh --codespace {codespace}')
    ssh_connection.expect(['$', '#'])
    ssh_connection.sendline(f'tmux attach -t {session_name}')
    index = ssh_connection.expect([pexpect.TIMEOUT, pexpect.EOF, 'no sessions'], timeout=3)
    if index == 2:
        ssh_connection.sendline(f'tmux new -s {session_name} -d')
        ssh_connection.expect(['$', '#'])
        ssh_connection.sendline(f'tmux send-keys -t {session_name} python3 {script_path} C-m')
        ssh_connection.sendline(f'tmux attach -t {session_name}')
    ssh_connection.interact()
except Exception as e:
    print(f'Error: {e}', file=sys.stderr)
    sys.exit(1)
"
